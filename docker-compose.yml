services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - microservices-network
  kafka:
      image: wurstmeister/kafka:latest
      container_name: kafka
      ports:
        - "9092:9092"
      expose:
        - "9093"
      environment:
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      networks:
        - microservices-network

  # MySQL for AuthenticationMS
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"  # Exposing MySQL on port 3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: csms
    networks:
        - microservices-network

  transactionms:
      build: ./../transactionms
      container_name: transactionms
      depends_on:
        - kafka
      environment:
        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      networks:
        - microservices-network

  authenticationms:
        build: ./../authenticationms
        container_name: authenticationms
        depends_on:
          - kafka
        environment:
          SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
        networks:
          - microservices-network
networks:
  microservices-network:
    driver: bridge
