services:
  mysql:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: csms
    ports:
      - ":3306"
    networks:
      - microservices_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_container
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - microservices_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_container
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - ":9092"
    networks:
      - microservices_network

  authenticationms:
    image: authenticationms:latest
    container_name: authenticationms_container
    restart: always
    depends_on:
      - mysql
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/csms
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8082:8082"
    networks:
      - microservices_network
    command: ["./wait-for-it.sh", "kafka:9092", "--", "java", "-jar", "authenticationms.jar"]
  transactionms:
    image: transactionms:latest
    container_name: transactionms_container
    restart: always
    depends_on:
      - authenticationms
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8081"
    networks:
      - microservices_network
    command: ["./wait-for-it.sh", "kafka:9092", "--", "java", "-jar", "transactionms.jar"]
networks:
  microservices_network:
    driver: bridge